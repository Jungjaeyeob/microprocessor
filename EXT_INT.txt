/******************************************************

    외부 인터럽트를 이용한 스톱워치
    
    동작원리 :
        100ms단위로 증가하는 스톱워치가 
        외부인터럽트 0이 동작하면 정지/시작을,
        외부인터럽트 1이 동작하면, 리셋을 실행한다.
    
    포트 연결 :
         1. MCU 모듈의 P0_0 ~ P0_3 을 ARRAY_FND모듈의 C3 ~ C0 핀에 연결한다.
            P0_0 -> C3 
            P0_1 -> C2
            P0_2 -> C1
            P0_3 -> C0
        
        2.MCU 모듈의 P1 을 ARRAY_FND모듈의 A ~ H 에 연결한다. 
        
        3. MCU 모듈의 P3_2 , P3_3 을 SWTICH모듈의 BT0, BT1 에 연결한다.
        
    소스 설명 :           
        1)  스톱워치 시작/정지 동작을 결정하는 플래그
        2)  10ms 단위의 타이머0 오버플로우
        3)  Low Edge 에서 동작하는 외부 인터럽트0,1 설정.
            외부 인터럽트0,1 을 허용하도록 설정.
        4)  버튼 상태에 따라 외부인터럽트가 발생되어, STOP_flag 와 time_sec, time_ms 값이 
            변경될수있으므로, 잠시동안의 딜레이후, 값을 초기화 한다.
        5)  time_ms, time_sec 값을 Array_FND 에 출력한다.
        6)  외부 인터럽트0 서비스 루틴.
            스톱워치를 시작/정지를 결정한다.
        7)  외부 인터럽트1 서비스 루틴.
            시간을 초기화 한다.
        8)  타이머0 오버플로우 인터럽트 서비스 루틴.
            100ms마다 STOP_flag 에 따라 시간을 증가시킨다.
            
*******************************************************/

#include"reg_C51.h"

unsigned char time_sec=0;
unsigned char time_ms=0;

//  1)
bit STOP_flag=1;

unsigned char FND_TBL[]={0x3F,0X06,0X5B,0X4F,0X66,0X6D,0X7C,0X07,0X7F,0X67,0x80};        

void Array_FND_Output(char com, unsigned char value);

void main(void){

    unsigned char i=10000;

//  2)
    TMOD = 0x01;

    TH0 = 0xA0;	
	TL0 = 0x00;		
    
    EA = 1; 
    
    ET0 = 1; 
    TR0 = 1 ;

//  3)
    IT0 = 1; 
    IT1 = 1;

    EX0 = 1; //interrupt enable
    EX1 = 1;
    
//  4)
    while(i--);  
          
    time_sec = 0;
    time_ms = 0;

    STOP_flag = 1;

//  5)
    while(1){
        
        Array_FND_Output(0,FND_TBL[time_ms%10]);
        Array_FND_Output(1,FND_TBL[time_ms/10]);

        Array_FND_Output(2,FND_TBL[time_sec%10] | 0x80);                
        Array_FND_Output(3,FND_TBL[time_sec/10]);

    }
    

    
}

//  6)
void Ext0_int(void) interrupt 0
{
    STOP_flag ^= 1;       

} 

//  7)
void Ext1_int(void) interrupt 2
{
     time_sec = 0;
     time_ms = 0;

} 

//  8)
void T0_int(void) interrupt 1 
{      

    TH0 = 0xA0;	
	TL0 = 0x00;	
    
    if(!STOP_flag){   
        time_ms++;
        
                   
        if(time_ms>99){
            time_sec++; 
            time_ms = 0;            
            
         }
           
         if(time_sec>59)
             time_sec=0;
    }        
	
}



void Array_FND_Output(char com, unsigned char value){
    
    unsigned int i = 250;
    
    P0 |= 0x0F;    
    
    switch(com){
        case 0:
            P0_0 = 0; 
        break;

        case 1:
            P0_1 = 0; 
        break;

        case 2:
            P0_2 = 0; 
        break;

        case 3:
            P0_3 = 0; 
        break;
    }

    P1 = value;

    while(i--);
} 